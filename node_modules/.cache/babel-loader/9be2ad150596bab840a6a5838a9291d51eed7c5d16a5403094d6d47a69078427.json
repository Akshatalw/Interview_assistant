{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\final\\\\interview_assistant_app\\\\src\\\\CrispUniqueInterview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist/legacy/build/pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.worker.min.js';\n\n// localStorage key\nconst STORAGE_KEY = 'crisp_unique_v1';\n\n// simple regex\nconst EMAIL_RE = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\nconst PHONE_RE = /(?:\\+\\d{1,3}[\\s-])?(?:\\(\\d{2,4}\\)|\\d{2,4})[\\s-]?\\d{3,4}[\\s-]?\\d{3,4}/g;\n\n// Question bank\nconst QUESTION_BANK = [{\n  text: 'What are strings in java?',\n  difficulty: 'easy',\n  timeLimit: 20\n}, {\n  text: 'what are the applications of stack?',\n  difficulty: 'easy',\n  timeLimit: 20\n}, {\n  text: 'Explain the difference between let, const, and var in JavaScript.',\n  difficulty: 'medium',\n  timeLimit: 60\n}, {\n  text: 'How would you handle exception in java?.',\n  difficulty: 'medium',\n  timeLimit: 60\n}, {\n  text: 'WAP to reverse a linked list.',\n  difficulty: 'hard',\n  timeLimit: 120\n}, {\n  text: 'Implement a function to find the longest common subsequence between two strings. Explain your algorithm.',\n  difficulty: 'hard',\n  timeLimit: 120\n}];\nconst uid = () => Math.random().toString(36).slice(2, 9);\nfunction save(state) {}\nfunction load() {\n  return null;\n}\nfunction scoreAnswer(question, answer) {\n  const ans = (answer || '').trim();\n  if (!ans) return 0;\n  const lenScore = Math.min(40, Math.floor(ans.split(/\\s+/).length * 2));\n  const qWords = (question || '').toLowerCase().match(/[a-z]{3,}/g) || [];\n  let matches = 0;\n  for (const w of qWords) if (ans.toLowerCase().includes(w)) matches += 1;\n  const keywordScore = Math.min(40, matches * 8);\n  const rand = Math.floor(Math.random() * 21) - 10;\n  return Math.max(0, Math.min(100, lenScore + keywordScore + rand));\n}\nfunction feedbackFor(score, answer) {\n  if (!answer || answer.trim().length === 0) return 'No answer provided — try to answer next time.';\n  if (score < 35) return 'Needs improvement: be concise and include clear steps or examples.';\n  if (score < 70) return 'Good: you have some ideas. Add more detail and examples.';\n  return 'Great: clear, detailed, and structured answer.';\n}\nexport default function CrispUniqueInterview() {\n  _s();\n  const [store, setStore] = useState(() => load() || {\n    candidates: [],\n    lastInProgress: null\n  });\n  const [tab, setTab] = useState('interviewee');\n  const [fileLoading, setFileLoading] = useState(false);\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const [resumeText, setResumeText] = useState('');\n  const [currentId, setCurrentId] = useState(null);\n  const [chat, setChat] = useState([]);\n  const [qIndex, setQIndex] = useState(0);\n  const [running, setRunning] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [finalScore, setFinalScore] = useState(0);\n  const [questionTimeLeft, setQuestionTimeLeft] = useState(0);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  const questionTimer = useRef(null);\n  useEffect(() => {\n    try {\n      localStorage.removeItem(STORAGE_KEY);\n    } catch (e) {}\n  }, []);\n  useEffect(() => {\n    if (running && questionTimeLeft > 0) {\n      questionTimer.current = setInterval(() => {\n        setQuestionTimeLeft(prev => {\n          if (prev <= 1) {\n            handleSubmitAnswer(currentAnswer || '');\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(questionTimer.current);\n    }\n    return () => clearInterval(questionTimer.current);\n  }, [running, questionTimeLeft]);\n  function startQuestionTimer(targetIndex = qIndex) {\n    const currentQuestion = QUESTION_BANK[targetIndex];\n    if (currentQuestion) setQuestionTimeLeft(currentQuestion.timeLimit);\n  }\n  function upsertCandidate(c) {\n    setStore(prev => {\n      const others = prev.candidates.filter(x => x.id !== c.id);\n      return {\n        ...prev,\n        candidates: [c, ...others]\n      };\n    });\n  }\n  async function handleFile(f) {\n    if (!f) return;\n    setFileLoading(true);\n    try {\n      if (f.type === 'application/pdf') {\n        const buffer = await f.arrayBuffer();\n        const pdf = await pdfjsLib.getDocument({\n          data: buffer\n        }).promise;\n        let full = '';\n        for (let i = 1; i <= pdf.numPages; i++) {\n          const p = await pdf.getPage(i);\n          const content = await p.getTextContent();\n          const pageStr = content.items.map(it => it.str).join(' ');\n          full += '\\n' + pageStr;\n        }\n        setResumeText(full);\n        const emails = full.match(EMAIL_RE) || [];\n        const phones = full.match(PHONE_RE) || [];\n        const lines = full.split(/\\n+/).map(l => l.trim()).filter(Boolean);\n        let name = '';\n        for (const ln of lines.slice(0, 8)) {\n          if (/^[A-Z][a-z]+\\s+[A-Z][a-z]+/.test(ln)) {\n            name = ln.split(/[\\n,|]+/)[0];\n            break;\n          }\n        }\n        setForm(fv => ({\n          ...fv,\n          name: name || fv.name,\n          email: emails[0] || fv.email,\n          phone: phones[0] || fv.phone\n        }));\n      } else {\n        const txt = await f.text().catch(() => '');\n        setResumeText(txt);\n      }\n    } catch (e) {\n      console.error(e);\n      alert('Failed to parse resume — please fill fields manually.');\n    } finally {\n      setFileLoading(false);\n    }\n  }\n  function startInterview() {\n    if (!form.name || !form.email) return alert('Please add at least name and email.');\n    const id = uid();\n    const cand = {\n      id,\n      name: form.name,\n      email: form.email,\n      phone: form.phone,\n      resumeText,\n      chat: [],\n      status: 'in-progress',\n      createdAt: new Date().toISOString(),\n      score: 0,\n      qIndex: 0\n    };\n    upsertCandidate(cand);\n    setCurrentId(id);\n    setChat([]);\n    setRunning(true);\n    setQIndex(0);\n    setCurrentAnswer('');\n    setTab('interviewee');\n    setTimeout(() => {\n      const firstQ = QUESTION_BANK[0];\n      setChat([{\n        from: 'ai',\n        text: firstQ.text,\n        time: new Date().toISOString(),\n        difficulty: firstQ.difficulty\n      }]);\n      startQuestionTimer(0);\n    }, 200);\n  }\n  function handleSubmitAnswer(text) {\n    if (!currentId) {\n      setQIndex(i => i + 1);\n      return;\n    }\n    const question = QUESTION_BANK[qIndex] || {\n      text: '—'\n    };\n    const sc = scoreAnswer(question.text, text);\n    const userMsg = {\n      from: 'candidate',\n      text,\n      time: new Date().toISOString(),\n      score: sc\n    };\n    const newChat = [...chat, userMsg];\n    setChat(newChat);\n    const cand = store.candidates.find(c => c.id === currentId) || {};\n    const allChat = [...(cand.chat || []), userMsg];\n    const avg = computeAverageScore(allChat);\n    upsertCandidate({\n      ...cand,\n      chat: allChat,\n      qIndex: qIndex + 1,\n      score: avg\n    });\n    setCurrentAnswer('');\n    clearInterval(questionTimer.current);\n    setQuestionTimeLeft(0);\n    const nextIndex = qIndex + 1;\n    setQIndex(nextIndex);\n    if (nextIndex >= QUESTION_BANK.length) finishInterview(currentId);else {\n      setTimeout(() => {\n        const nextQ = QUESTION_BANK[nextIndex];\n        setChat(prev => [...prev, {\n          from: 'ai',\n          text: nextQ.text,\n          time: new Date().toISOString(),\n          difficulty: nextQ.difficulty\n        }]);\n        startQuestionTimer(nextIndex);\n      }, 300);\n    }\n  }\n  function computeAverageScore(chatArr) {\n    const scores = (chatArr || []).filter(m => m.score !== undefined).map(m => m.score);\n    if (!scores.length) return 0;\n    return Math.round(scores.reduce((a, b) => a + b, 0) / scores.length);\n  }\n  function finishInterview(id) {\n    setRunning(false);\n    clearInterval(questionTimer.current);\n    setQuestionTimeLeft(0);\n    const cand = store.candidates.find(c => c.id === id) || {};\n    const avg = computeAverageScore(cand.chat || []);\n    upsertCandidate({\n      ...cand,\n      status: 'completed',\n      score: avg\n    });\n    setFinalScore(avg);\n    setShowResult(true);\n    setCurrentId(null);\n    setChat([]);\n    setCurrentAnswer('');\n  }\n  function selectCandidate(id) {\n    setTab('interviewer');\n    setCurrentId(id);\n  }\n  const sorted = useMemo(() => [...store.candidates].sort((a, b) => (b.score || 0) - (a.score || 0)), [store.candidates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        gridColumn: '2 / span 1'\n      },\n      children: tab === 'interviewer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 16,\n          borderRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontWeight: 700\n          },\n          children: \"Interviewer Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr',\n            gap: 12,\n            marginTop: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 12,\n                color: '#6b7280'\n              },\n              children: \"Candidates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8,\n                maxHeight: 420,\n                overflow: 'auto'\n              },\n              children: sorted.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: 8\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: 12,\n                    background: '#fff',\n                    borderRadius: 8,\n                    boxShadow: '0 1px 2px rgba(0,0,0,0.04)'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'space-between'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontWeight: 600\n                        },\n                        children: c.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: 12,\n                          color: '#6b7280'\n                        },\n                        children: [c.email, \" \", c.phone]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: 11,\n                          color: '#9ca3af'\n                        },\n                        children: [\"Status: \", c.status]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        textAlign: 'right'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontWeight: 700\n                        },\n                        children: c.score || 0\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => selectCandidate(c.id),\n                        style: {\n                          marginTop: 6,\n                          padding: '6px 10px',\n                          borderRadius: 6\n                        },\n                        children: \"Open\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this)\n              }, c.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 12,\n                color: '#6b7280'\n              },\n              children: \"Selected Candidate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), currentId ? (() => {\n              const c = store.candidates.find(x => x.id === currentId);\n              if (!c) return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No candidate found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 34\n              }, this);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 12,\n                  borderRadius: 8,\n                  background: '#f9fafb',\n                  maxHeight: 420,\n                  overflow: 'auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontWeight: 700\n                  },\n                  children: c.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: 13,\n                    color: '#6b7280'\n                  },\n                  children: [c.email, \" \", c.phone]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 8,\n                    fontSize: 13\n                  },\n                  children: \"Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 6,\n                    fontSize: 13\n                  },\n                  children: c.summary || 'No summary yet.'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 8,\n                    fontSize: 13\n                  },\n                  children: \"Chat history\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 6\n                  },\n                  children: (c.chat || []).map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      padding: 8,\n                      marginBottom: 8,\n                      borderRadius: 6,\n                      background: m.from === 'ai' ? '#fff' : '#ecfeff'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontSize: 12,\n                        color: '#6b7280'\n                      },\n                      children: [m.from === 'ai' ? 'AI' : c.name, \" \\u2022 \", new Date(m.time).toLocaleString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 6\n                      },\n                      children: m.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 29\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 8\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      const avg = computeAverageScore(c.chat || []);\n                      const summary = `Candidate ${c.name} performed with an average score of ${avg}. Overall, ${avg >= 70 ? 'strong' : avg >= 40 ? 'moderate' : 'weak'} performance.`;\n                      upsertCandidate({\n                        ...c,\n                        summary,\n                        score: avg\n                      });\n                    },\n                    style: {\n                      padding: 8,\n                      borderRadius: 6,\n                      background: '#4f46e5',\n                      color: '#fff'\n                    },\n                    children: \"Generate Summary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this);\n            })() : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 13,\n                color: '#6b7280'\n              },\n              children: \"Select a candidate to view details.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(CrispUniqueInterview, \"bHs8CpCHIlpjOOtUjn4bWQEDQ+o=\");\n_c = CrispUniqueInterview;\nvar _c;\n$RefreshReg$(_c, \"CrispUniqueInterview\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","pdfjsLib","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","STORAGE_KEY","EMAIL_RE","PHONE_RE","QUESTION_BANK","text","difficulty","timeLimit","uid","Math","random","toString","slice","save","state","load","scoreAnswer","question","answer","ans","trim","lenScore","min","floor","split","length","qWords","toLowerCase","match","matches","w","includes","keywordScore","rand","max","feedbackFor","score","CrispUniqueInterview","_s","store","setStore","candidates","lastInProgress","tab","setTab","fileLoading","setFileLoading","form","setForm","name","email","phone","resumeText","setResumeText","currentId","setCurrentId","chat","setChat","qIndex","setQIndex","running","setRunning","showResult","setShowResult","finalScore","setFinalScore","questionTimeLeft","setQuestionTimeLeft","currentAnswer","setCurrentAnswer","questionTimer","localStorage","removeItem","e","current","setInterval","prev","handleSubmitAnswer","clearInterval","startQuestionTimer","targetIndex","currentQuestion","upsertCandidate","c","others","filter","x","id","handleFile","f","type","buffer","arrayBuffer","pdf","getDocument","data","promise","full","i","numPages","p","getPage","content","getTextContent","pageStr","items","map","it","str","join","emails","phones","lines","l","Boolean","ln","test","fv","txt","catch","console","error","alert","startInterview","cand","status","createdAt","Date","toISOString","setTimeout","firstQ","from","time","sc","userMsg","newChat","find","allChat","avg","computeAverageScore","nextIndex","finishInterview","nextQ","chatArr","scores","m","undefined","round","reduce","a","b","selectCandidate","sorted","sort","style","padding","children","gridColumn","background","borderRadius","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","marginTop","fontSize","color","maxHeight","overflow","marginBottom","boxShadow","justifyContent","textAlign","onClick","summary","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/final/interview_assistant_app/src/CrispUniqueInterview.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist/legacy/build/pdf';\npdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.worker.min.js';\n\n// localStorage key\nconst STORAGE_KEY = 'crisp_unique_v1';\n\n// simple regex\nconst EMAIL_RE = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\nconst PHONE_RE = /(?:\\+\\d{1,3}[\\s-])?(?:\\(\\d{2,4}\\)|\\d{2,4})[\\s-]?\\d{3,4}[\\s-]?\\d{3,4}/g;\n\n// Question bank\nconst QUESTION_BANK = [\n  { text: 'What are strings in java?', difficulty: 'easy', timeLimit: 20 },\n  { text: 'what are the applications of stack?', difficulty: 'easy', timeLimit: 20 },\n  { text: 'Explain the difference between let, const, and var in JavaScript.', difficulty: 'medium', timeLimit: 60 },\n  { text: 'How would you handle exception in java?.', difficulty: 'medium', timeLimit: 60 },\n  { text: 'WAP to reverse a linked list.', difficulty: 'hard', timeLimit: 120 },\n  { text: 'Implement a function to find the longest common subsequence between two strings. Explain your algorithm.', difficulty: 'hard', timeLimit: 120 }\n];\n\nconst uid = () => Math.random().toString(36).slice(2, 9);\n\nfunction save(state) {}\nfunction load() { return null; }\n\nfunction scoreAnswer(question, answer) {\n  const ans = (answer || '').trim();\n  if (!ans) return 0;\n  const lenScore = Math.min(40, Math.floor(ans.split(/\\s+/).length * 2));\n  const qWords = (question || '').toLowerCase().match(/[a-z]{3,}/g) || [];\n  let matches = 0;\n  for (const w of qWords) if (ans.toLowerCase().includes(w)) matches += 1;\n  const keywordScore = Math.min(40, matches * 8);\n  const rand = Math.floor(Math.random() * 21) - 10;\n  return Math.max(0, Math.min(100, lenScore + keywordScore + rand));\n}\n\nfunction feedbackFor(score, answer) {\n  if (!answer || answer.trim().length === 0) return 'No answer provided — try to answer next time.';\n  if (score < 35) return 'Needs improvement: be concise and include clear steps or examples.';\n  if (score < 70) return 'Good: you have some ideas. Add more detail and examples.';\n  return 'Great: clear, detailed, and structured answer.';\n}\n\nexport default function CrispUniqueInterview() {\n  const [store, setStore] = useState(() => load() || { candidates: [], lastInProgress: null });\n  const [tab, setTab] = useState('interviewee');\n  const [fileLoading, setFileLoading] = useState(false);\n  const [form, setForm] = useState({ name: '', email: '', phone: '' });\n  const [resumeText, setResumeText] = useState('');\n  const [currentId, setCurrentId] = useState(null);\n  const [chat, setChat] = useState([]);\n  const [qIndex, setQIndex] = useState(0);\n  const [running, setRunning] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [finalScore, setFinalScore] = useState(0);\n  const [questionTimeLeft, setQuestionTimeLeft] = useState(0);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  const questionTimer = useRef(null);\n\n  useEffect(() => { try { localStorage.removeItem(STORAGE_KEY); } catch (e) {} }, []);\n\n  useEffect(() => {\n    if (running && questionTimeLeft > 0) {\n      questionTimer.current = setInterval(() => {\n        setQuestionTimeLeft(prev => {\n          if (prev <= 1) {\n            handleSubmitAnswer(currentAnswer || '');\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(questionTimer.current);\n    }\n    return () => clearInterval(questionTimer.current);\n  }, [running, questionTimeLeft]);\n\n  function startQuestionTimer(targetIndex = qIndex) {\n    const currentQuestion = QUESTION_BANK[targetIndex];\n    if (currentQuestion) setQuestionTimeLeft(currentQuestion.timeLimit);\n  }\n\n  function upsertCandidate(c) {\n    setStore(prev => {\n      const others = prev.candidates.filter(x => x.id !== c.id);\n      return { ...prev, candidates: [c, ...others] };\n    });\n  }\n\n  async function handleFile(f) {\n    if (!f) return;\n    setFileLoading(true);\n    try {\n      if (f.type === 'application/pdf') {\n        const buffer = await f.arrayBuffer();\n        const pdf = await pdfjsLib.getDocument({ data: buffer }).promise;\n        let full = '';\n        for (let i = 1; i <= pdf.numPages; i++) {\n          const p = await pdf.getPage(i);\n          const content = await p.getTextContent();\n          const pageStr = content.items.map(it => it.str).join(' ');\n          full += '\\n' + pageStr;\n        }\n        setResumeText(full);\n        const emails = full.match(EMAIL_RE) || [];\n        const phones = full.match(PHONE_RE) || [];\n        const lines = full.split(/\\n+/).map(l => l.trim()).filter(Boolean);\n        let name = '';\n        for (const ln of lines.slice(0, 8)) {\n          if (/^[A-Z][a-z]+\\s+[A-Z][a-z]+/.test(ln)) { name = ln.split(/[\\n,|]+/)[0]; break; }\n        }\n        setForm(fv => ({ ...fv, name: name || fv.name, email: emails[0] || fv.email, phone: phones[0] || fv.phone }));\n      } else {\n        const txt = await f.text().catch(() => '');\n        setResumeText(txt);\n      }\n    } catch (e) {\n      console.error(e);\n      alert('Failed to parse resume — please fill fields manually.');\n    } finally {\n      setFileLoading(false);\n    }\n  }\n\n  function startInterview() {\n    if (!form.name || !form.email) return alert('Please add at least name and email.');\n    const id = uid();\n    const cand = { id, name: form.name, email: form.email, phone: form.phone, resumeText, chat: [], status: 'in-progress', createdAt: new Date().toISOString(), score: 0, qIndex: 0 };\n    upsertCandidate(cand);\n    setCurrentId(id);\n    setChat([]);\n    setRunning(true);\n    setQIndex(0);\n    setCurrentAnswer('');\n    setTab('interviewee');\n    setTimeout(() => {\n      const firstQ = QUESTION_BANK[0];\n      setChat([{ from: 'ai', text: firstQ.text, time: new Date().toISOString(), difficulty: firstQ.difficulty }]);\n      startQuestionTimer(0);\n    }, 200);\n  }\n\n  function handleSubmitAnswer(text) {\n    if (!currentId) { setQIndex(i => i + 1); return; }\n    const question = QUESTION_BANK[qIndex] || { text: '—' };\n    const sc = scoreAnswer(question.text, text);\n    const userMsg = { from: 'candidate', text, time: new Date().toISOString(), score: sc };\n    const newChat = [...chat, userMsg];\n    setChat(newChat);\n    const cand = store.candidates.find(c => c.id === currentId) || {};\n    const allChat = [...(cand.chat || []), userMsg];\n    const avg = computeAverageScore(allChat);\n    upsertCandidate({ ...cand, chat: allChat, qIndex: qIndex + 1, score: avg });\n    setCurrentAnswer('');\n    clearInterval(questionTimer.current);\n    setQuestionTimeLeft(0);\n    const nextIndex = qIndex + 1;\n    setQIndex(nextIndex);\n    if (nextIndex >= QUESTION_BANK.length) finishInterview(currentId);\n    else {\n      setTimeout(() => {\n        const nextQ = QUESTION_BANK[nextIndex];\n        setChat(prev => [...prev, { from: 'ai', text: nextQ.text, time: new Date().toISOString(), difficulty: nextQ.difficulty }]);\n        startQuestionTimer(nextIndex);\n      }, 300);\n    }\n  }\n\n  function computeAverageScore(chatArr) {\n    const scores = (chatArr || []).filter(m => m.score !== undefined).map(m => m.score);\n    if (!scores.length) return 0;\n    return Math.round(scores.reduce((a,b)=>a+b,0)/scores.length);\n  }\n\n  function finishInterview(id) {\n    setRunning(false);\n    clearInterval(questionTimer.current);\n    setQuestionTimeLeft(0);\n    const cand = store.candidates.find(c => c.id === id) || {};\n    const avg = computeAverageScore(cand.chat || []);\n    upsertCandidate({ ...cand, status: 'completed', score: avg });\n    setFinalScore(avg);\n    setShowResult(true);\n    setCurrentId(null);\n    setChat([]);\n    setCurrentAnswer('');\n  }\n\n  function selectCandidate(id) {\n    setTab('interviewer');\n    setCurrentId(id);\n  }\n\n  const sorted = useMemo(() => [...store.candidates].sort((a,b)=> (b.score||0)-(a.score||0)), [store.candidates]);\n\n  return (\n    <div style={{padding:20}}>\n      {/* ... Interviewee code unchanged ... */}\n\n      <section style={{gridColumn:'2 / span 1'}}>\n        {tab === 'interviewer' && (\n          <div style={{background:'#fff', padding:16, borderRadius:8}}>\n            <h2 style={{fontWeight:700}}>Interviewer Dashboard</h2>\n            <div style={{display:'grid', gridTemplateColumns:'1fr 1fr', gap:12, marginTop:12}}>\n              <div>\n                <div style={{fontSize:12, color:'#6b7280'}}>Candidates</div>\n                <div style={{marginTop:8, maxHeight:420, overflow:'auto'}}>\n                  {sorted.map(c => (\n                    <div key={c.id} style={{marginBottom:8}}>\n                      <div style={{padding:12, background:'#fff', borderRadius:8, boxShadow:'0 1px 2px rgba(0,0,0,0.04)'}}>\n                        <div style={{display:'flex', justifyContent:'space-between'}}>\n                          <div>\n                            <div style={{fontWeight:600}}>{c.name}</div>\n                            <div style={{fontSize:12, color:'#6b7280'}}>{c.email} {c.phone}</div>\n                            <div style={{fontSize:11, color:'#9ca3af'}}>Status: {c.status}</div>\n                          </div>\n                          <div style={{textAlign:'right'}}>\n                            <div style={{fontWeight:700}}>{c.score || 0}</div>\n                            <button onClick={()=> selectCandidate(c.id)} style={{marginTop:6, padding:'6px 10px', borderRadius:6}}>Open</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <div style={{fontSize:12, color:'#6b7280'}}>Selected Candidate</div>\n                {currentId ? (() => {\n                  const c = store.candidates.find(x=>x.id===currentId);\n                  if (!c) return <div>No candidate found.</div>;\n                  return (\n                    <div style={{padding:12, borderRadius:8, background:'#f9fafb', maxHeight:420, overflow:'auto'}}>\n                      <div style={{fontWeight:700}}>{c.name}</div>\n                      <div style={{fontSize:13, color:'#6b7280'}}>{c.email} {c.phone}</div>\n                      <div style={{marginTop:8, fontSize:13}}>Summary</div>\n                      <div style={{marginTop:6, fontSize:13}}>{c.summary || 'No summary yet.'}</div>\n                      <div style={{marginTop:8, fontSize:13}}>Chat history</div>\n                      <div style={{marginTop:6}}>\n                        {(c.chat || []).map((m,i)=>(\n                          <div key={i} style={{padding:8, marginBottom:8, borderRadius:6, background:m.from==='ai' ? '#fff' : '#ecfeff'}}>\n                            <div style={{fontSize:12, color:'#6b7280'}}>{m.from==='ai' ? 'AI' : c.name} • {new Date(m.time).toLocaleString()}</div>\n                            <div style={{marginTop:6}}>{m.text}</div>\n                          </div>\n                        ))}\n                      </div>\n                      <div style={{marginTop:8}}>\n                        <button onClick={()=>{\n                          const avg = computeAverageScore(c.chat||[]);\n                          const summary = `Candidate ${c.name} performed with an average score of ${avg}. Overall, ${avg >= 70 ? 'strong' : avg >= 40 ? 'moderate' : 'weak'} performance.`;\n                          upsertCandidate({...c, summary, score: avg});\n                        }} style={{padding:8, borderRadius:6, background:'#4f46e5', color:'#fff'}}>\n                          Generate Summary\n                        </button>\n                      </div>\n                    </div>\n                  );\n                })() : <div style={{fontSize:13, color:'#6b7280'}}>Select a candidate to view details.</div>}\n              </div>\n            </div>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}