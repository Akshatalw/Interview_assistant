{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\final\\\\interview_assistant_app\\\\src\\\\CrispUniqueInterview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist/legacy/build/pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.worker.min.js';\n\n// localStorage key\nconst STORAGE_KEY = 'interview_assistant_v1';\n\n// simple regex\nconst EMAIL_RE = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\nconst PHONE_RE = /(?:\\+\\d{1,3}[\\s-])?(?:\\(\\d{2,4}\\)|\\d{2,4})[\\s-]?\\d{3,4}[\\s-]?\\d{3,4}/g;\n\n// Question bank with exactly 2 easy, 2 medium, 2 hard questions\nconst QUESTION_BANK = [\n// Easy questions (20 seconds each)\n{\n  text: 'What are strings in java?',\n  difficulty: 'easy',\n  timeLimit: 20\n}, {\n  text: 'what are the applications of stack?',\n  difficulty: 'easy',\n  timeLimit: 20\n},\n// Medium questions (60 seconds each)\n{\n  text: 'Explain the difference between let, const, and var in JavaScript.',\n  difficulty: 'medium',\n  timeLimit: 60\n}, {\n  text: 'How would you handle exception in java?.',\n  difficulty: 'medium',\n  timeLimit: 60\n},\n// Hard questions (120 seconds each)\n{\n  text: 'WAP to reverse a linked list.',\n  difficulty: 'hard',\n  timeLimit: 120\n}, {\n  text: 'Implement a function to find the longest common subsequence between two strings. Explain your algorithm.',\n  difficulty: 'hard',\n  timeLimit: 120\n}];\n\n// Utility: unique id\nconst uid = () => Math.random().toString(36).slice(2, 9);\nfunction save(state) {\n  // persistence disabled: do nothing to ensure fresh start on refresh\n}\nfunction load() {\n  // persistence disabled: always start with empty state\n  return null;\n}\n\n// Scoring: length-based + keyword matches + small randomness\nfunction scoreAnswer(question, answer) {\n  const ans = (answer || '').trim();\n  if (!ans) return 0;\n  const lenScore = Math.min(40, Math.floor(ans.split(/\\s+/).length * 2)); // up to 40\n  const qWords = (question || '').toLowerCase().match(/[a-z]{3,}/g) || [];\n  let matches = 0;\n  for (const w of qWords) if (ans.toLowerCase().includes(w)) matches += 1;\n  const keywordScore = Math.min(40, matches * 8); // up to 40\n  const rand = Math.floor(Math.random() * 21) - 10; // -10..10\n  const total = Math.max(0, Math.min(100, lenScore + keywordScore + rand));\n  return total;\n}\nfunction feedbackFor(score, answer) {\n  if (!answer || answer.trim().length === 0) return 'No answer provided — try to answer next time.';\n  if (score < 35) return 'Needs improvement: be concise and include clear steps or examples.';\n  if (score < 70) return 'Good: you have some ideas. Add more detail and examples.';\n  return 'Great: clear, detailed, and structured answer.';\n}\nexport default function InterviewAssistant() {\n  _s();\n  const [store, setStore] = useState(() => load() || {\n    candidates: [],\n    lastInProgress: null\n  });\n\n  // UI state\n  const [tab, setTab] = useState('interviewee');\n  const [fileLoading, setFileLoading] = useState(false);\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const [resumeText, setResumeText] = useState('');\n  const [currentId, setCurrentId] = useState(null);\n  const [chat, setChat] = useState([]);\n  const [overallSec, setOverallSec] = useState(0);\n  const overallTimer = useRef(null);\n  const [qIndex, setQIndex] = useState(0);\n  const [running, setRunning] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [finalScore, setFinalScore] = useState(0);\n  const [questionTimeLeft, setQuestionTimeLeft] = useState(0);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  const questionTimer = useRef(null);\n  const [showWelcome, setShowWelcome] = useState(false);\n  useEffect(() => {\n    try {\n      localStorage.removeItem(STORAGE_KEY);\n    } catch (e) {}\n  }, []);\n\n  // question timer effect\n  useEffect(() => {\n    if (running && questionTimeLeft > 0) {\n      questionTimer.current = setInterval(() => {\n        setQuestionTimeLeft(prev => {\n          if (prev <= 1) {\n            const answerToSubmit = currentAnswer || '';\n            handleSubmitAnswer(answerToSubmit);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(questionTimer.current);\n    }\n    return () => clearInterval(questionTimer.current);\n  }, [running, questionTimeLeft]);\n  function startQuestionTimer(targetIndex = qIndex) {\n    const currentQuestion = QUESTION_BANK[targetIndex];\n    if (currentQuestion) {\n      setQuestionTimeLeft(currentQuestion.timeLimit);\n    }\n  }\n  function upsertCandidate(c) {\n    setStore(prev => {\n      const others = prev.candidates.filter(x => x.id !== c.id);\n      return {\n        ...prev,\n        candidates: [c, ...others]\n      };\n    });\n  }\n  async function handleFile(f) {\n    if (!f) return;\n    setFileLoading(true);\n    try {\n      if (f.type === 'application/pdf') {\n        const buffer = await f.arrayBuffer();\n        const pdf = await pdfjsLib.getDocument({\n          data: buffer\n        }).promise;\n        let full = '';\n        for (let i = 1; i <= pdf.numPages; i++) {\n          const p = await pdf.getPage(i);\n          const content = await p.getTextContent();\n          const pageStr = content.items.map(it => it.str).join(' ');\n          full += '\\n' + pageStr;\n        }\n        setResumeText(full);\n        const emails = full.match(EMAIL_RE) || [];\n        const phones = full.match(PHONE_RE) || [];\n        const lines = full.split(/\\n+/).map(l => l.trim()).filter(Boolean);\n        let name = '';\n        for (const ln of lines.slice(0, 8)) {\n          if (/^[A-Z][a-z]+\\s+[A-Z][a-z]+/.test(ln)) {\n            name = ln.split(/[\\n,|]+/)[0];\n            break;\n          }\n        }\n        setForm(fv => ({\n          ...fv,\n          name: name || fv.name,\n          email: emails[0] || fv.email,\n          phone: phones[0] || fv.phone\n        }));\n      } else {\n        const txt = await f.text().catch(() => '');\n        setResumeText(txt);\n      }\n    } catch (e) {\n      console.error(e);\n      alert('Failed to parse resume — please fill fields manually.');\n    } finally {\n      setFileLoading(false);\n    }\n  }\n  function startInterview() {\n    if (!form.name || !form.email) return alert('Please add at least name and email.');\n    const id = uid();\n    const cand = {\n      id,\n      name: form.name,\n      email: form.email,\n      phone: form.phone,\n      resumeText,\n      chat: [],\n      status: 'in-progress',\n      createdAt: new Date().toISOString(),\n      score: 0,\n      elapsed: 0,\n      qIndex: 0\n    };\n    upsertCandidate(cand);\n    setCurrentId(id);\n    setChat([]);\n    setRunning(true);\n    setQIndex(0);\n    setCurrentAnswer('');\n    setTab('interviewee');\n    setTimeout(() => {\n      const firstQ = QUESTION_BANK[0];\n      setChat([{\n        from: 'ai',\n        text: firstQ.text,\n        time: new Date().toISOString(),\n        difficulty: firstQ.difficulty\n      }]);\n      startQuestionTimer(0);\n    }, 200);\n  }\n  function handleSubmitAnswer(text) {\n    if (!currentId) {\n      setQIndex(i => i + 1);\n      return;\n    }\n    const question = QUESTION_BANK[qIndex] || {\n      text: '—'\n    };\n    const sc = scoreAnswer(question.text, text);\n    const userMsg = {\n      from: 'candidate',\n      text,\n      time: new Date().toISOString(),\n      score: sc\n    };\n    const newChat = [...chat, userMsg];\n    setChat(newChat);\n    const cand = store.candidates.find(c => c.id === currentId) || {};\n    const allChat = [...(cand.chat || []), userMsg];\n    const avg = computeAverageScore(allChat);\n    upsertCandidate({\n      ...cand,\n      chat: allChat,\n      qIndex: qIndex + 1,\n      score: avg\n    });\n    setCurrentAnswer('');\n    clearInterval(questionTimer.current);\n    setQuestionTimeLeft(0);\n    const nextIndex = qIndex + 1;\n    setQIndex(nextIndex);\n    if (nextIndex >= QUESTION_BANK.length) {\n      finishInterview(currentId);\n    } else {\n      setTimeout(() => {\n        const nextQ = QUESTION_BANK[nextIndex];\n        setChat(prev => [...prev, {\n          from: 'ai',\n          text: nextQ.text,\n          time: new Date().toISOString(),\n          difficulty: nextQ.difficulty\n        }]);\n        startQuestionTimer(nextIndex);\n      }, 300);\n    }\n  }\n  function computeAverageScore(chatArr) {\n    const scores = (chatArr || []).filter(m => m.score !== undefined).map(m => m.score);\n    if (!scores.length) return 0;\n    return Math.round(scores.reduce((a, b) => a + b, 0) / scores.length);\n  }\n  function finishInterview(id) {\n    setRunning(false);\n    clearInterval(questionTimer.current);\n    setQuestionTimeLeft(0);\n    const cand = store.candidates.find(c => c.id === id) || {};\n    const avg = computeAverageScore(cand.chat || []);\n    upsertCandidate({\n      ...cand,\n      status: 'completed',\n      elapsed: 0,\n      score: avg\n    });\n    setFinalScore(avg);\n    setShowResult(true);\n    setCurrentId(null);\n    setChat([]);\n    setCurrentAnswer('');\n  }\n  function selectCandidate(id) {\n    setTab('interviewer');\n    setCurrentId(id);\n  }\n  const sorted = useMemo(() => [...store.candidates].sort((a, b) => (b.score || 0) - (a.score || 0)), [store.candidates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        maxWidth: 900,\n        margin: '0 auto 20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: 22,\n          fontWeight: 700\n        },\n        children: \"Interview Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        maxWidth: 900,\n        margin: '0 auto',\n        display: 'grid',\n        gridTemplateColumns: '1fr 2fr',\n        gap: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        style: {\n          background: '#fff',\n          padding: 16,\n          borderRadius: 8,\n          boxShadow: '0 1px 3px rgba(0,0,0,0.06)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTab('interviewee'),\n            style: {\n              padding: '8px 12px',\n              borderRadius: 6,\n              background: tab === 'interviewee' ? '#4f46e5' : '#eef2ff',\n              color: tab === 'interviewee' ? '#fff' : '#111'\n            },\n            children: \"Interviewee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTab('interviewer'),\n            style: {\n              padding: '8px 12px',\n              borderRadius: 6,\n              background: tab === 'interviewer' ? '#4f46e5' : '#f3f4f6',\n              color: tab === 'interviewer' ? '#fff' : '#111'\n            },\n            children: \"Interviewer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: '#6b7280'\n            },\n            children: \"Candidates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 8,\n              maxHeight: 320,\n              overflow: 'auto'\n            },\n            children: [sorted.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 13,\n                color: '#6b7280'\n              },\n              children: \"No candidates yet \\u2014 add from Interviewee tab.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 39\n            }, this), sorted.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => selectCandidate(c.id),\n              style: {\n                padding: 12,\n                background: '#fff',\n                borderRadius: 8,\n                marginBottom: 8,\n                boxShadow: '0 1px 2px rgba(0,0,0,0.04)'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontWeight: 600\n                    },\n                    children: c.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: 12,\n                      color: '#6b7280'\n                    },\n                    children: [c.email, c.phone ? ` • ${c.phone}` : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: 11,\n                      color: '#9ca3af'\n                    },\n                    children: [\"Status: \", c.status || 'new']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'right'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontWeight: 700\n                    },\n                    children: c.score || 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      e.stopPropagation();\n                      selectCandidate(c.id);\n                    },\n                    style: {\n                      marginTop: 6,\n                      padding: '6px 10px',\n                      borderRadius: 6\n                    },\n                    children: \"Open\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this)\n            }, c.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          gridColumn: '2 / span 1'\n        },\n        children: tab === 'interviewee' ?\n        /*#__PURE__*/\n        /* Interviewee part remains unchanged */\n        _jsxDEV(\"div\", {\n          children: \" ... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#fff',\n            padding: 16,\n            borderRadius: 8,\n            boxShadow: '0 1px 3px rgba(0,0,0,0.06)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontWeight: 700\n            },\n            children: \"Interviewer Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr',\n              gap: 12,\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 12,\n                  color: '#6b7280'\n                },\n                children: \"Candidates (sorted by score)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8,\n                  maxHeight: 420,\n                  overflow: 'auto'\n                },\n                children: sorted.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: 8\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      padding: 12,\n                      background: '#fff',\n                      borderRadius: 8,\n                      boxShadow: '0 1px 2px rgba(0,0,0,0.04)'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        justifyContent: 'space-between'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontWeight: 600\n                          },\n                          children: c.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 292,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: 12,\n                            color: '#6b7280'\n                          },\n                          children: [c.email, c.phone ? ` • ${c.phone}` : '']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 293,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: 11,\n                            color: '#9ca3af'\n                          },\n                          children: [\"Status: \", c.status || 'new']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          textAlign: 'right'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontWeight: 700\n                          },\n                          children: c.score || 0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => selectCandidate(c.id),\n                          style: {\n                            marginTop: 6,\n                            padding: '6px 10px',\n                            borderRadius: 6\n                          },\n                          children: \"Open\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 298,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this)\n                }, c.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 12,\n                  color: '#6b7280'\n                },\n                children: \"Selected Candidate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), currentId ? (() => {\n                const c = store.candidates.find(x => x.id === currentId);\n                if (!c) return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"No candidate found.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 107\n                }, this);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: 12,\n                    borderRadius: 8,\n                    background: '#f9fafb',\n                    maxHeight: 420,\n                    overflow: 'auto'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontWeight: 700\n                    },\n                    children: c.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: 13,\n                      color: '#6b7280'\n                    },\n                    children: [c.email, \" \", c.phone ? `• ${c.phone}` : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: 8,\n                      fontSize: 13\n                    },\n                    children: \"Summary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: 6,\n                      fontSize: 13\n                    },\n                    children: c.summary || 'No summary yet.'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: 8,\n                      fontSize: 13\n                    },\n                    children: \"Resume Text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: 6,\n                      maxHeight: 120,\n                      overflow: 'auto',\n                      background: '#fff',\n                      padding: 8,\n                      borderRadius: 6\n                    },\n                    children: c.resumeText ? c.resumeText.slice(0, 200) + '...' : 'No resume text stored.'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: 8,\n                      fontSize: 13\n                    },\n                    children: \"Chat history\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: 6\n                    },\n                    children: (c.chat || []).map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: 8,\n                        marginBottom: 8,\n                        borderRadius: 6,\n                        background: m.from === 'ai' ? '#fff' : '#ecfeff'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: 12,\n                          color: '#6b7280'\n                        },\n                        children: [m.from === 'ai' ? 'AI' : c.name, \" \\u2022 \", new Date(m.time).toLocaleString()]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          marginTop: 6\n                        },\n                        children: m.text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 31\n                      }, this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: 8,\n                      display: 'flex',\n                      gap: 8\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        const avg = computeAverageScore(c.chat || []);\n                        let feedback = '';\n                        if (avg < 35) feedback = 'Performance needs significant improvement. Answers were incomplete or unclear.';else if (avg < 70) feedback = 'Performance was average. Candidate showed some knowledge but needs more detail and examples.';else feedback = 'Performance was strong. Candidate gave clear, detailed, and structured answers.';\n                        upsertCandidate({\n                          ...c,\n                          summary: `Candidate ${c.name} scored ${avg}/100. ${feedback}`,\n                          score: avg\n                        });\n                      },\n                      style: {\n                        padding: 8,\n                        borderRadius: 6,\n                        background: '#4f46e5',\n                        color: '#fff'\n                      },\n                      children: \"Generate Summary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this);\n              })() : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No candidate selected.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n_s(InterviewAssistant, \"7ntGyclVhmXMwpiHa0Fd9WS5QmE=\");\n_c = InterviewAssistant;\nvar _c;\n$RefreshReg$(_c, \"InterviewAssistant\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","pdfjsLib","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","STORAGE_KEY","EMAIL_RE","PHONE_RE","QUESTION_BANK","text","difficulty","timeLimit","uid","Math","random","toString","slice","save","state","load","scoreAnswer","question","answer","ans","trim","lenScore","min","floor","split","length","qWords","toLowerCase","match","matches","w","includes","keywordScore","rand","total","max","feedbackFor","score","InterviewAssistant","_s","store","setStore","candidates","lastInProgress","tab","setTab","fileLoading","setFileLoading","form","setForm","name","email","phone","resumeText","setResumeText","currentId","setCurrentId","chat","setChat","overallSec","setOverallSec","overallTimer","qIndex","setQIndex","running","setRunning","showResult","setShowResult","finalScore","setFinalScore","questionTimeLeft","setQuestionTimeLeft","currentAnswer","setCurrentAnswer","questionTimer","showWelcome","setShowWelcome","localStorage","removeItem","e","current","setInterval","prev","answerToSubmit","handleSubmitAnswer","clearInterval","startQuestionTimer","targetIndex","currentQuestion","upsertCandidate","c","others","filter","x","id","handleFile","f","type","buffer","arrayBuffer","pdf","getDocument","data","promise","full","i","numPages","p","getPage","content","getTextContent","pageStr","items","map","it","str","join","emails","phones","lines","l","Boolean","ln","test","fv","txt","catch","console","error","alert","startInterview","cand","status","createdAt","Date","toISOString","elapsed","setTimeout","firstQ","from","time","sc","userMsg","newChat","find","allChat","avg","computeAverageScore","nextIndex","finishInterview","nextQ","chatArr","scores","m","undefined","round","reduce","a","b","selectCandidate","sorted","sort","style","padding","children","maxWidth","margin","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","background","borderRadius","boxShadow","onClick","color","marginTop","maxHeight","overflow","marginBottom","justifyContent","textAlign","stopPropagation","gridColumn","summary","toLocaleString","feedback","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/final/interview_assistant_app/src/CrispUniqueInterview.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist/legacy/build/pdf';\npdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.worker.min.js';\n\n// localStorage key\nconst STORAGE_KEY = 'interview_assistant_v1';\n\n// simple regex\nconst EMAIL_RE = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\nconst PHONE_RE = /(?:\\+\\d{1,3}[\\s-])?(?:\\(\\d{2,4}\\)|\\d{2,4})[\\s-]?\\d{3,4}[\\s-]?\\d{3,4}/g;\n\n// Question bank with exactly 2 easy, 2 medium, 2 hard questions\nconst QUESTION_BANK = [\n  // Easy questions (20 seconds each)\n  { text: 'What are strings in java?', difficulty: 'easy', timeLimit: 20 },\n  { text: 'what are the applications of stack?', difficulty: 'easy', timeLimit: 20 },\n  \n  // Medium questions (60 seconds each)\n  { text: 'Explain the difference between let, const, and var in JavaScript.', difficulty: 'medium', timeLimit: 60 },\n  { text: 'How would you handle exception in java?.', difficulty: 'medium', timeLimit: 60 },\n  \n  // Hard questions (120 seconds each)\n  { text: 'WAP to reverse a linked list.', difficulty: 'hard', timeLimit: 120 },\n  { text: 'Implement a function to find the longest common subsequence between two strings. Explain your algorithm.', difficulty: 'hard', timeLimit: 120 }\n];\n\n// Utility: unique id\nconst uid = () => Math.random().toString(36).slice(2, 9);\n\nfunction save(state) {\n  // persistence disabled: do nothing to ensure fresh start on refresh\n}\nfunction load() {\n  // persistence disabled: always start with empty state\n  return null;\n}\n\n// Scoring: length-based + keyword matches + small randomness\nfunction scoreAnswer(question, answer) {\n  const ans = (answer || '').trim();\n  if (!ans) return 0;\n  const lenScore = Math.min(40, Math.floor(ans.split(/\\s+/).length * 2)); // up to 40\n  const qWords = (question || '').toLowerCase().match(/[a-z]{3,}/g) || [];\n  let matches = 0;\n  for (const w of qWords) if (ans.toLowerCase().includes(w)) matches += 1;\n  const keywordScore = Math.min(40, matches * 8); // up to 40\n  const rand = Math.floor(Math.random() * 21) - 10; // -10..10\n  const total = Math.max(0, Math.min(100, lenScore + keywordScore + rand));\n  return total;\n}\n\nfunction feedbackFor(score, answer) {\n  if (!answer || answer.trim().length === 0) return 'No answer provided — try to answer next time.';\n  if (score < 35) return 'Needs improvement: be concise and include clear steps or examples.';\n  if (score < 70) return 'Good: you have some ideas. Add more detail and examples.';\n  return 'Great: clear, detailed, and structured answer.';\n}\n\nexport default function InterviewAssistant() {\n  const [store, setStore] = useState(() => load() || { candidates: [], lastInProgress: null });\n\n  // UI state\n  const [tab, setTab] = useState('interviewee');\n  const [fileLoading, setFileLoading] = useState(false);\n  const [form, setForm] = useState({ name: '', email: '', phone: '' });\n  const [resumeText, setResumeText] = useState('');\n  const [currentId, setCurrentId] = useState(null);\n  const [chat, setChat] = useState([]);\n  const [overallSec, setOverallSec] = useState(0);\n  const overallTimer = useRef(null);\n\n  const [qIndex, setQIndex] = useState(0);\n  const [running, setRunning] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [finalScore, setFinalScore] = useState(0);\n  const [questionTimeLeft, setQuestionTimeLeft] = useState(0);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  const questionTimer = useRef(null);\n\n  const [showWelcome, setShowWelcome] = useState(false);\n\n  useEffect(() => {\n    try { localStorage.removeItem(STORAGE_KEY); } catch (e) {}\n  }, []);\n\n  // question timer effect\n  useEffect(() => {\n    if (running && questionTimeLeft > 0) {\n      questionTimer.current = setInterval(() => {\n        setQuestionTimeLeft(prev => {\n          if (prev <= 1) {\n            const answerToSubmit = currentAnswer || '';\n            handleSubmitAnswer(answerToSubmit);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(questionTimer.current);\n    }\n    return () => clearInterval(questionTimer.current);\n  }, [running, questionTimeLeft]);\n\n  function startQuestionTimer(targetIndex = qIndex) {\n    const currentQuestion = QUESTION_BANK[targetIndex];\n    if (currentQuestion) {\n      setQuestionTimeLeft(currentQuestion.timeLimit);\n    }\n  }\n\n  function upsertCandidate(c) {\n    setStore(prev => {\n      const others = prev.candidates.filter(x => x.id !== c.id);\n      return { ...prev, candidates: [c, ...others] };\n    });\n  }\n\n  async function handleFile(f) {\n    if (!f) return;\n    setFileLoading(true);\n    try {\n      if (f.type === 'application/pdf') {\n        const buffer = await f.arrayBuffer();\n        const pdf = await pdfjsLib.getDocument({ data: buffer }).promise;\n        let full = '';\n        for (let i = 1; i <= pdf.numPages; i++) {\n          const p = await pdf.getPage(i);\n          const content = await p.getTextContent();\n          const pageStr = content.items.map(it => it.str).join(' ');\n          full += '\\n' + pageStr;\n        }\n        setResumeText(full);\n        const emails = full.match(EMAIL_RE) || [];\n        const phones = full.match(PHONE_RE) || [];\n        const lines = full.split(/\\n+/).map(l => l.trim()).filter(Boolean);\n        let name = '';\n        for (const ln of lines.slice(0, 8)) {\n          if (/^[A-Z][a-z]+\\s+[A-Z][a-z]+/.test(ln)) { name = ln.split(/[\\n,|]+/)[0]; break; }\n        }\n        setForm(fv => ({ ...fv, name: name || fv.name, email: emails[0] || fv.email, phone: phones[0] || fv.phone }));\n      } else {\n        const txt = await f.text().catch(() => '');\n        setResumeText(txt);\n      }\n    } catch (e) {\n      console.error(e); alert('Failed to parse resume — please fill fields manually.');\n    } finally { setFileLoading(false); }\n  }\n\n  function startInterview() {\n    if (!form.name || !form.email) return alert('Please add at least name and email.');\n    const id = uid();\n    const cand = {\n      id,\n      name: form.name,\n      email: form.email,\n      phone: form.phone,\n      resumeText,\n      chat: [],\n      status: 'in-progress',\n      createdAt: new Date().toISOString(),\n      score: 0,\n      elapsed: 0,\n      qIndex: 0\n    };\n    upsertCandidate(cand);\n    setCurrentId(id); \n    setChat([]); \n    setRunning(true); \n    setQIndex(0); \n    setCurrentAnswer('');\n    setTab('interviewee');\n    setTimeout(() => {\n      const firstQ = QUESTION_BANK[0];\n      setChat([{ from: 'ai', text: firstQ.text, time: new Date().toISOString(), difficulty: firstQ.difficulty }]);\n      startQuestionTimer(0);\n    }, 200);\n  }\n\n  function handleSubmitAnswer(text) {\n    if (!currentId) {\n      setQIndex(i => i + 1);\n      return;\n    }\n    const question = QUESTION_BANK[qIndex] || { text: '—' };\n    const sc = scoreAnswer(question.text, text);\n    const userMsg = { from: 'candidate', text, time: new Date().toISOString(), score: sc };\n    const newChat = [...chat, userMsg];\n    setChat(newChat);\n\n    const cand = store.candidates.find(c => c.id === currentId) || {};\n    const allChat = [...(cand.chat || []), userMsg];\n    const avg = computeAverageScore(allChat);\n    upsertCandidate({ ...cand, chat: allChat, qIndex: qIndex + 1, score: avg });\n\n    setCurrentAnswer('');\n    clearInterval(questionTimer.current);\n    setQuestionTimeLeft(0);\n\n    const nextIndex = qIndex + 1;\n    setQIndex(nextIndex);\n    if (nextIndex >= QUESTION_BANK.length) {\n      finishInterview(currentId);\n    } else {\n      setTimeout(() => {\n        const nextQ = QUESTION_BANK[nextIndex];\n        setChat(prev => [...prev, { from: 'ai', text: nextQ.text, time: new Date().toISOString(), difficulty: nextQ.difficulty }]);\n        startQuestionTimer(nextIndex);\n      }, 300);\n    }\n  }\n\n  function computeAverageScore(chatArr) {\n    const scores = (chatArr || []).filter(m => m.score !== undefined).map(m => m.score);\n    if (!scores.length) return 0; return Math.round(scores.reduce((a,b)=>a+b,0)/scores.length);\n  }\n\n  function finishInterview(id) {\n    setRunning(false);\n    clearInterval(questionTimer.current);\n    setQuestionTimeLeft(0);\n    const cand = store.candidates.find(c => c.id === id) || {};\n    const avg = computeAverageScore(cand.chat || []);\n    upsertCandidate({ ...cand, status: 'completed', elapsed: 0, score: avg });\n    setFinalScore(avg);\n    setShowResult(true);\n    setCurrentId(null);\n    setChat([]);\n    setCurrentAnswer('');\n  }\n\n  function selectCandidate(id) {\n    setTab('interviewer'); setCurrentId(id);\n  }\n\n  const sorted = useMemo(() => [...store.candidates].sort((a,b)=> (b.score||0)-(a.score||0)), [store.candidates]);\n\n  return (\n    <div style={{padding:20}}>\n      <header style={{maxWidth:900, margin:'0 auto 20px'}}>\n        <h1 style={{fontSize:22, fontWeight:700}}>Interview Assistant</h1>\n      </header>\n\n      <main style={{maxWidth:900, margin:'0 auto', display:'grid', gridTemplateColumns:'1fr 2fr', gap:20}}>\n        <aside style={{background:'#fff', padding:16, borderRadius:8, boxShadow:'0 1px 3px rgba(0,0,0,0.06)'}}>\n          <div style={{display:'flex', gap:8}}>\n            <button onClick={() => setTab('interviewee')} style={{padding:'8px 12px', borderRadius:6, background: tab==='interviewee' ? '#4f46e5' : '#eef2ff', color: tab==='interviewee' ? '#fff' : '#111'}}>Interviewee</button>\n            <button onClick={() => setTab('interviewer')} style={{padding:'8px 12px', borderRadius:6, background: tab==='interviewer' ? '#4f46e5' : '#f3f4f6', color: tab==='interviewer' ? '#fff' : '#111'}}>Interviewer</button>\n          </div>\n\n          <div style={{marginTop:12}}>\n            <div style={{fontSize:12, color:'#6b7280'}}>Candidates</div>\n            <div style={{marginTop:8, maxHeight:320, overflow:'auto'}}>\n              {sorted.length === 0 && <div style={{fontSize:13, color:'#6b7280'}}>No candidates yet — add from Interviewee tab.</div>}\n              {sorted.map(c => (\n                <div key={c.id} onClick={() => selectCandidate(c.id)} style={{padding:12, background:'#fff', borderRadius:8, marginBottom:8, boxShadow:'0 1px 2px rgba(0,0,0,0.04)'}}>\n                  <div style={{display:'flex', justifyContent:'space-between'}}>\n                    <div>\n                      <div style={{fontWeight:600}}>{c.name}</div>\n                      <div style={{fontSize:12, color:'#6b7280'}}>{c.email}{c.phone ? ` • ${c.phone}` : ''}</div>\n                      <div style={{fontSize:11, color:'#9ca3af'}}>Status: {c.status || 'new'}</div>\n                    </div>\n                    <div style={{textAlign:'right'}}>\n                      <div style={{fontWeight:700}}>{c.score || 0}</div>\n                      <button onClick={(e)=>{ e.stopPropagation(); selectCandidate(c.id); }} style={{marginTop:6, padding:'6px 10px', borderRadius:6}}>Open</button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </aside>\n\n        <section style={{gridColumn:'2 / span 1'}}>\n          {tab === 'interviewee' ? (\n            /* Interviewee part remains unchanged */\n            <div> ... </div>\n          ) : (\n            <div style={{background:'#fff', padding:16, borderRadius:8, boxShadow:'0 1px 3px rgba(0,0,0,0.06)'}}>\n              <h2 style={{fontWeight:700}}>Interviewer Dashboard</h2>\n\n              <div style={{display:'grid', gridTemplateColumns:'1fr 1fr', gap:12, marginTop:12}}>\n                <div>\n                  <div style={{fontSize:12, color:'#6b7280'}}>Candidates (sorted by score)</div>\n                  <div style={{marginTop:8, maxHeight:420, overflow:'auto'}}>\n                    {sorted.map(c => (\n                      <div key={c.id} style={{marginBottom:8}}>\n                        <div style={{padding:12, background:'#fff', borderRadius:8, boxShadow:'0 1px 2px rgba(0,0,0,0.04)'}}>\n                          <div style={{display:'flex', justifyContent:'space-between'}}>\n                            <div>\n                              <div style={{fontWeight:600}}>{c.name}</div>\n                              <div style={{fontSize:12, color:'#6b7280'}}>{c.email}{c.phone ? ` • ${c.phone}` : ''}</div>\n                              <div style={{fontSize:11, color:'#9ca3af'}}>Status: {c.status || 'new'}</div>\n                            </div>\n                            <div style={{textAlign:'right'}}>\n                              <div style={{fontWeight:700}}>{c.score || 0}</div>\n                              <button onClick={()=> selectCandidate(c.id)} style={{marginTop:6, padding:'6px 10px', borderRadius:6}}>Open</button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <div style={{fontSize:12, color:'#6b7280'}}>Selected Candidate</div>\n                  {currentId ? (()=>{ const c = store.candidates.find(x=>x.id===currentId); if(!c) return <div>No candidate found.</div>;\n                    return (\n                      <div style={{padding:12, borderRadius:8, background:'#f9fafb', maxHeight:420, overflow:'auto'}}>\n                        <div style={{fontWeight:700}}>{c.name}</div>\n                        <div style={{fontSize:13, color:'#6b7280'}}>{c.email} {c.phone ? `• ${c.phone}` : ''}</div>\n                        <div style={{marginTop:8, fontSize:13}}>Summary</div>\n                        <div style={{marginTop:6, fontSize:13}}>{c.summary || 'No summary yet.'}</div>\n\n                        <div style={{marginTop:8, fontSize:13}}>Resume Text</div>\n                        <div style={{marginTop:6, maxHeight:120, overflow:'auto', background:'#fff', padding:8, borderRadius:6}}>{c.resumeText ? c.resumeText.slice(0,200)+'...' : 'No resume text stored.'}</div>\n\n                        <div style={{marginTop:8, fontSize:13}}>Chat history</div>\n                        <div style={{marginTop:6}}>\n                          {(c.chat || []).map((m,i)=>(\n                            <div key={i} style={{padding:8, marginBottom:8, borderRadius:6, background:m.from==='ai' ? '#fff' : '#ecfeff'}}>\n                              <div style={{fontSize:12, color:'#6b7280'}}>{m.from==='ai' ? 'AI' : c.name} • {new Date(m.time).toLocaleString()}</div>\n                              <div style={{marginTop:6}}>{m.text}</div>\n                            </div>\n                          ))}\n                        </div>\n\n                        <div style={{marginTop:8, display:'flex', gap:8}}>\n                          <button \n                            onClick={()=>{\n                              const avg = computeAverageScore(c.chat||[]);\n                              let feedback = '';\n                              if (avg < 35) feedback = 'Performance needs significant improvement. Answers were incomplete or unclear.';\n                              else if (avg < 70) feedback = 'Performance was average. Candidate showed some knowledge but needs more detail and examples.';\n                              else feedback = 'Performance was strong. Candidate gave clear, detailed, and structured answers.';\n\n                              upsertCandidate({\n                                ...c, \n                                summary: `Candidate ${c.name} scored ${avg}/100. ${feedback}`, \n                                score: avg\n                              });\n                            }} \n                            style={{padding:8, borderRadius:6, background:'#4f46e5', color:'#fff'}}\n                          >\n                            Generate Summary\n                          </button>\n                        </div>\n                      </div>\n                    );\n                  })() : <div>No candidate selected.</div>}\n                </div>\n              </div>\n            </div>\n          )}\n        </section>\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}